// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Client {
  id             Int      @id @default(autoincrement())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  email          String   @unique
  hashedPassword String
  firstName      String
  lastName       String
  address        String
  addressNumber  Int
  image          String
  reviews        Review[]
  orders         Order[]
}

model Product {
  id               Int            @id @default(autoincrement())
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt @default(now())
  name             String
  price            Float
  shortDescription String         @db.VarChar(250)
  smallDescription String         @db.VarChar(1024)
  longDescription  String         @db.Text
  stock            Int
  images           ProductImage[]
  reviews          Review[]
  orderProducts    ProductOrder[]
}

model ProductImage {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  imageUrl  String
  product   Product  @relation(fields: [productId], references: [id])
  productId Int

  @@index([productId])
}

model Review {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  client    Client   @relation(fields: [clientId], references: [id])
  clientId  Int

  @@index([productId])
  @@index([clientId])
}

model Order {
  id        Int            @id @default(autoincrement())
  createdAt DateTime       @default(now())
  products  ProductOrder[]
  amount    Float
  client    Client         @relation(fields: [clientId], references: [id])
  clientId  Int
  delivered Boolean        @default(false)
  Address   String

  @@index([clientId])
}

model ProductOrder {
  id         Int     @id @default(autoincrement())
  product    Product @relation(fields: [productId], references: [id])
  productId  Int
  quantity   Int
  unityPrice Float
  order      Order   @relation(fields: [orderId], references: [id])
  orderId    Int

  @@index([productId])
  @@index([orderId])
}
